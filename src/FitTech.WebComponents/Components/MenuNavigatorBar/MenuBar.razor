@page "/MenuNavigatorBar"
@inherits FitTech.WebComponents.Components.CancellableComponent;
@using Microsoft.AspNetCore.Components
@using System.Collections.Generic
@using FitTech.WebComponents.Components.IconsSVG

<CascadingValue Value=this>
    <AvatarUpload/>
</CascadingValue>


<aside class="fixed left-0 top-0 h-full bg-white dark:bg-gray-800 border-r border-gray-300 dark:border-gray-700 shadow-md transition-all duration-300 ease-in-out @(isExpanded ? "w-64" : "w-20")">
    <div class="mb-6 text-center p-4">
        <h3 class="text-2xl font-bold text-black dark:text-white transition-opacity duration-300 ease-in-out @(isExpanded ? "opacity-100" : "opacity-0")">FitTech</h3>
    </div>

    <!-- Avatar and Name Section -->
    <div class="flex items-center p-4 rounded-lg transition-all duration-300 ease-in-out relative">

        @if (string.IsNullOrEmpty(imagePreviewFromChild))
        {
            <div class="my-4 flex justify-center items-center" @onclick="ToggleAvatarModal">
                <img src="https://previews.123rf.com/images/fayethequeen/fayethequeen2209/fayethequeen220900007/191787954-avatar-de-mujer-de-negocios-con-signo-de-interrogaci%C3%B3n-aislado-en-fondo-blanco-silueta-de-avatar-de.jpg" alt="No Avatar" class="w-24 h-24 rounded-full object-cover" />
            </div>
        }
        else
        {
            <div class="my-4 flex justify-center items-center" @onclick="ToggleAvatarModal">
                <img src="@imagePreviewFromChild" alt="Avatar Preview" class="w-full h-full object-cover" />
            </div>
        }

        <!-- Nombre y Apellido (solo se muestra cuando la sidebar está expandida) -->
        <div class="text-left transition-opacity duration-300 ease-in-out @(isExpanded ? "opacity-100" : "opacity-0")">
            <p class="text-lg font-semibold text-black dark:text-white">Yeray</p>
            <p class="text-sm text-gray-700 dark:text-gray-300">Blanco Aldao</p>
        </div>

        <!-- Cuadro para cambiar el avatar (a la derecha del avatar) -->
        @if (isAvatarModalOpen)
        {
            <div class="absolute top-0 left-full ml-4 bg-white p-6 rounded-lg shadow-lg max-w-sm w-full z-10">
                <h3 class="text-xl font-semibold text-center">Cambiar Avatar</h3>
                <AvatarUpload/>
                <button class="mt-4 bg-red-500 text-white p-2 rounded-full w-full" @onclick="CloseAvatarModal">Cerrar</button>
            </div>
        }
    </div>

    <div class="p-6">
        <ul>
            @foreach (var menuItem in menuItems)
            {
                <li class="mt-4 text-gray-700 dark:text-gray-300">
                    <a href="@menuItem.Link" class="flex items-center block p-2 rounded-lg hover:bg-gradient-to-r hover:from-[#ADC539] hover:to-[#A5D153] dark:hover:bg-gradient-to-r dark:hover:from-[#ADC539] dark:hover:to-[#A5D153] transition-colors duration-300">
                        <span class="mr-2">
                            <IconsSVG Icon="@menuItem.Icon" />
                        </span>
                        <span class="text-sm @(isExpanded ? "block" : "hidden")">@menuItem.Text</span>
                    </a>
                </li>
            }
        </ul>
    </div>

    <div class="mt-4 p-4 text-center">
        <p class="text-gray-700 dark:text-gray-300">© 2025 FitTech</p>
    </div>

    <!-- Botón ToggleSidebar (dentro de la barra lateral, alineado a la derecha) -->
    <button @onclick="ToggleSidebar" class="absolute bottom-4 right-4 transform bg-gray-800 text-white p-2 rounded-full focus:outline-none transition-all duration-300 ease-in-out">
        <i class="fas fa-chevron-left"></i> <!-- Cambié el ícono para que apunte hacia la izquierda -->
    </button>

</aside>



@code {
    private bool isExpanded = true;

    private void ToggleSidebar()
    {
        isExpanded = !isExpanded;
    }

    private class MenuItem
    {
        public string? Text { get; set; }
        public string? Link { get; set; }
        public string? Icon { get; set; }
    }

    private List<MenuItem> menuItems = new List<MenuItem>
    {
        new MenuItem { Text = "Inicio", Link = "/home", Icon = "HomeIcon" },
        new MenuItem { Text = "Mi Perfil", Link = "/profile", Icon = "ProfileIcon" },
        new MenuItem { Text = "Rutinas de Ejercicio", Link = "/workouts", Icon = "WorkoutsIcon" },
        new MenuItem { Text = "Seguimiento de Progreso", Link = "/progress", Icon = "ProgressIcon" },
        new MenuItem { Text = "Planes de Alimentación", Link = "/nutrition", Icon = "NutritionIcon" },
        new MenuItem { Text = "Clases en Vivo", Link = "/live-classes", Icon = "LiveClassesIcon" },
        new MenuItem { Text = "Comunidad", Link = "/community", Icon = "CommunityIcon" },
        new MenuItem { Text = "Desafíos", Link = "/challenges", Icon = "ChallengesIcon" },
        new MenuItem { Text = "Notificaciones", Link = "/notifications", Icon = "NotificationsIcon" },
        new MenuItem { Text = "Configuración", Link = "/settings", Icon = "SettingsIcon" },
        new MenuItem { Text = "Soporte", Link = "/support", Icon = "SupportIcon" },
        new MenuItem { Text = "Cerrar Sesión", Link = "/logout", Icon = "LogoutIcon" }

    };

    private bool isAvatarModalOpen = false;

    // Abrir el modal para cambiar avatar
    private void ToggleAvatarModal()
    {
        isAvatarModalOpen = !isAvatarModalOpen;
    }

    // Cerrar el modal sin cambios
    private void CloseAvatarModal()
    {
        isAvatarModalOpen = false;
    }


    private string? imagePreviewFromChild;

    // Manejar el evento de selección de imagen
    public void ActualizarAvatar(string? newImagePreview)
    {
        imagePreviewFromChild = newImagePreview;
        StateHasChanged(); // Forzamos la actualización del componente MenuBar
    }
}
