@page "/login"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inherits FitTech.WebComponents.Components.CancellableComponent;
@using FitTech.WebComponents.Services
@using Microsoft.Extensions.Logging
@using Microsoft.AspNetCore.Components.Forms
@inject ILogger<Login> Logger
@inject IUserService UserService;
@inject NavigationManager NavigationManager


<div class="w-full max-w-md px-4">
    <div class="rounded-md border border-gray-300 bg-white p-6 shadow-md dark:border-gray-700 dark:bg-gray-800 dark:shadow-none">
        <div class="mb-6 text-center">
            <h2 class="mt-4 text-2xl font-bold text-black dark:text-white">Bienvenido a FitTech</h2>
        </div>
        <EditForm Model="LoginModel" OnSubmit="Submit" FormName="LoginForm">
            <div class="mb-4">
                <label for="email" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Email</label>
                <InputText type="text" @bind-Value="LoginModel!.Email" id="email" class="w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
            </div>

            <div class="mb-4">
                <div class="flex items-center justify-between">
                    <label for="password" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Contraseña</label>
                    <a href="/RecoveryPassword" class="text-sm text-blue-600 hover:underline dark:text-blue-400">¿Olvidaste tu contraseña?</a>
                </div>
                <InputText type="password" @bind-Value="LoginModel!.Password" id="password" class="w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
            </div>

            <button type="submit" class="w-full rounded bg-green-600 py-2 text-white transition-colors hover:bg-green-700">Login</button>
        </EditForm>
    </div>

    <div class="mt-4 rounded-md border border-gray-300 bg-white p-4 text-center shadow-md dark:border-gray-700 dark:bg-gray-800 dark:shadow-none">
        <p class="mt-2 text-gray-700 dark:text-gray-300">
            ¿No tienes cuenta?
            <a href ="/register"  class="text-blue-600 hover:underline dark:text-blue-400">Registrate aquí</a>
        </p>
    </div>
</div>

@code
{
    [SupplyParameterFromForm]
    private LoginModel? LoginModel { get; set; }

    protected override void OnInitialized() => LoginModel ??= new();

    private async Task Submit()
    {
        Logger.LogInformation("Email: {Email}", LoginModel?.Email);
        var response = await UserService.LoginAsync(LoginModel!.Email, LoginModel.Password, _cts.Token);

        if (!response!.Succeeded)
        {
            //TODO: Display Error
            return;
        }
        
        //TODO: Navigate to dashboard
    } 

   
} 
