@using FitTech.WebComponents.Pages.CustomerManager.CustomerManagerModels;

<EditForm Model="Model" OnInvalidSubmit="Submit" FormName="CostumerForm">
    
    <DataAnnotationsValidator/>
    
    <div class="mb-4">
        <label for="subscriptiontype" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Tipo de Subscripción</label>
        <InputSelect type="text" @bind-Value="Model.SubscriptionType" TValue="string" id="subscriptiontype" class=" w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white">
            <option value="Selecciona un tipo de Subscripción">Selecciona un tipo de Subscripción</option>
            <option value="Pérdida de Peso">Pérdida de Peso</option>
            <option value="Aumento de Masa Muscular">Aumento de Masa Muscular</option>
            <option value="Mejora Rendimiento Deportivo">Mejora Rendimiento Deportivo</option>
        </InputSelect>
        <ValidationMessage For="@(() => Model.SubscriptionType)" class="text-red-600 text-sm"/>
    </div>
    <div class="mb-4">
        <label for="firstName" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Horas de entrenamiento contratados</label>
        <InputNumber type="text" @bind-Value="Model!.TrainingHours" placeholder="Horas de entrenamiento semanales" id="firstName" class="placeholder-gray-500 w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
        <ValidationMessage For="@(() => Model.TrainingHours)" class="text-red-600 text-sm"/>
    </div>
        <div class="mb-4">
            <label for="trainingtype" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Modalidad de Entrenamiento</label>
            <InputSelect type="text" @bind-Value="Model.TrainingModel" TValue="string" id="trainingtype" class=" w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white">
                <option value="Selecciona un tipo de Subscripción">Selecciona la modalidad de entrenamiento</option>
                <option value="Online">Online</option>
                <option value="Presencial">Presencial</option>
                <option value="Híbrida">Híbrida</option>
            </InputSelect>
            <ValidationMessage For="@(() => Model.TrainingModel)" class="text-red-600 text-sm"/>
        </div>
    <div class="mb-4">
        <label for="evento" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Fecha Límita o Evento</label>
        <InputDate @bind-Value="Model!.DateSportEvent" id="evento" class="w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
        <ValidationMessage For="@(() => Model.DateSportEvent)" class="text-red-600 text-sm"/>
    </div>
    <div class="mb-4">
        <label for="center" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Entrenamiento Conjunto: Centro deportivo</label>
        <InputText type="text" @bind-Value="Model!.Center" id="center" placeholder="Centro Deportivo para entrenar" class="placeholder-gray-500 w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
        <ValidationMessage For="@(() => Model.Center)" class="text-red-600 text-sm"/>
    </div>
</EditForm>

@code {
    
    [Parameter]
    public required NewClientModel Model { get; set; }
    
    protected override void OnInitialized()
    {
        Model ??= new();
    }
    
    public void Submit()
    {
        
    }

}