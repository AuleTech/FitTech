@page "/resetpassword"
@layout EmptyLayout
@inherits FitTech.WebComponents.Components.CancellableComponent
@inject IUserService UserService
@inject NavigationManager Navigation

<div class="w-full max-w-md px-4">
    <div
        class="rounded-md border border-gray-300 bg-white p-6 shadow-md dark:border-gray-700 dark:bg-gray-800 dark:shadow-none">
        <div class="mb-6 text-center">
            <h2 class="mt-4 text-2xl font-bold text-black dark:text-white">Restablecer Contraseña</h2>
        </div>
        <EditForm Model="ResetPasswordModel" OnValidSubmit="Submit" FormName="ResetPasswordForm">

            <DataAnnotationsValidator/>

            <div class="mb-4">
                <label for="newPassword" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Nueva
                    Contraseña</label>
                <InputText type="text" @bind-Value="ResetPasswordModel!.NewPassword" id="email"
                           class="w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
                <ValidationMessage For="@(() => ResetPasswordModel!.NewPassword)" class="text-red-600 text-sm"/>
            </div>

            <div class="mb-4">
                <label for="confirmNewPassword" class="mb-2 block text-sm font-bold text-gray-700 dark:text-gray-300">Repita
                    la nueva Contraseña</label>
                <InputText type="text" @bind-Value="ResetPasswordModel!.ConfirmNewPassword" id="email"
                           class="w-full rounded border border-gray-300 bg-gray-100 px-3 py-2 text-black focus:ring-2 focus:ring-blue-500 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-white"/>
                <ValidationMessage For="@(() => ResetPasswordModel!.ConfirmNewPassword)" class="text-red-600 text-sm"/>
            </div>

            <button type="submit"
                    class="w-full rounded bg-green-600 py-2 text-white transition-colors hover:bg-green-700">Restablecer
                Contraseña
            </button>
            @if (!string.IsNullOrEmpty(_message))
            {
                <p class="mt-3" style="color: @(_message.Contains("Error") ? "red" : "green")">
                    @(_message)
                </p>
            }

        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm] private ResetPasswordModel? ResetPasswordModel { get; set; }
    [SupplyParameterFromQuery] private string? Email { get; set; }
    [SupplyParameterFromQuery] private string? Token { get; set; }

    private string _message = string.Empty;

    protected override void OnInitialized()
    {
        ResetPasswordModel ??= new ResetPasswordModel();
    }

    private async Task Submit()
    {
        var response = await UserService.ResetPasswordAsync(Email!, Token!, ResetPasswordModel!.NewPassword, _cts.Token);

        if (!response!.Succeeded)
        {
            _message = "No se ha podido restablecer la contraseña. Intentalo de  nuevo.";
            return;
        }

        _message = "La contraseña se ha restablecido. Será reedirigido al login";
        StateHasChanged();
        await Task.Delay(3000);
        Navigation.NavigateTo("/login");
    }

}