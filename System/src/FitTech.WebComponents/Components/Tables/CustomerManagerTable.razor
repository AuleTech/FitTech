@using FitTech.WebComponents.Pages.CustomerManager.CustomerManagerModels
@inherits FitTech.WebComponents.Components.CancellableComponent
@inject IUserService UserService

<div class="p-6" style="margin-left: 250px;"> 
    <!-- Header -->
    <div class="flex flex-wrap items-center justify-between bg-white rounded-t-lg p-4 mb-6">
        <h2 class="text-2xl font-bold text-gray-900">GESTOR DE CLIENTES</h2>
        <div class="relative w-64">
            <input type="text" placeholder="Buscar" class="w-full border border-gray-300 rounded-full py-2 pl-4 pr-10 focus:outline-none focus:ring-2 focus:ring-green-700" />
            <svg xmlns="http://www.w3.org/2000/svg" class="absolute right-3 top-2.5 h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
        </div>
    </div>

    <!-- Cabecera -->
    <div class="grid grid-cols-8 px-6 py-3 text-xs font-semibold text-green-700 uppercase tracking-wider mb-2">
        <span>Nombre</span>
        <span>Apellidos</span>
        <span>Fecha Nac.</span>
        <span>Email</span>
        <span>Subscripción</span>
        <span>Modalidad</span>
        <span>Horas</span>
        <span class="text-center">Acciones</span>
    </div>

    <!-- Filas en estilo card -->
    <div class="space-y-4">
        @for (int i = 0; i < PagedClients.Count(); i++)
        {
            var client = PagedClients.ElementAt(i);
            var rowColor = i % 2 == 0 ? "bg-white" : "bg-gray-100"; <!-- alterna color -->

            <div class=@($"grid grid-cols-8 items-center {rowColor} rounded-lg shadow-md px-6 py-4 hover:shadow-lg transition")>
                <span class="text-gray-800 font-medium">@client.Name</span>
                <span class="text-gray-800">@client.LastName</span>
                <span class="text-gray-600">@client.Birthdate</span>
                <span class="text-gray-600">@client.Email</span>
                <span class="text-gray-600">@client.SubscriptionType</span>
                <span class="text-gray-600">@client.TrainingModel</span>
                <span class="text-gray-600">@client.TrainingHours</span>

                <!-- Botones -->
                <div class="flex justify-center space-x-3">
                    <button title="Editar" class="text-gray-500 hover:text-green-600 transition">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Z" />
                            <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 7.125L16.862 4.487" />
                        </svg>
                    </button>
                    <button title="Eliminar" class="text-gray-500 hover:text-red-600 transition">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166M18.16 19.673A2.25 2.25 0 0 1 15.916 21H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397" />
                        </svg>
                    </button>
                </div>
            </div>
        }
    </div>

    <!-- Footer -->
    <div class="mt-6 flex items-center justify-between">
        <span class="text-sm text-gray-600">
            Mostrando @PagedClients.Count() de  registros
        </span>

        <!-- Paginación estilo cards -->
        <div class="flex items-center space-x-2">
            <button @onclick="() => GoToPage(currentPage - 1)" class="px-3 py-1 rounded-lg bg-white shadow text-gray-600 hover:bg-gray-100" disabled="@(currentPage == 1)">
                Prev
            </button>

            @for (int i = 1; i <= TotalPages; i++)
            {
                <button @onclick="() => GoToPage(i)"
                        class="px-3 py-1 rounded-lg shadow-md text-sm font-medium transition
                               @(currentPage == i ? "bg-green-600 text-white" : "bg-white text-gray-700 hover:bg-gray-100")">
                    @i
                </button>
            }

            <button @onclick="() => GoToPage(currentPage + 1)" class="px-3 py-1 rounded-lg bg-white shadow text-gray-600 hover:bg-gray-100" disabled="@(currentPage == TotalPages)">
                Next
            </button>
        </div>
    </div>
</div>

@code {
    private int currentPage = 1;
    private int pageSize = 6;
    private List<ClientModel> _clients = new();
    private string _message = string.Empty;

    private int TotalPages => (int)Math.Ceiling((double)_clients.Count / pageSize);

    private IEnumerable<ClientModel> PagedClients =>
        _clients.Skip((currentPage - 1) * pageSize).Take(pageSize);

    private void GoToPage(int page)
    {
        if (page >= 1 && page <= TotalPages)
            currentPage = page;
    }
    
    protected override async Task OnInitializedAsync()
    {
        var response = await UserService.GetClientsDataAsync( _cts.Token);

        if (response.Succeeded)
        {
            
        }
        else
        {
            _message = "Hubo un error en la recuperación de los datos del usuario";
        }
        
    }
    
    
}
